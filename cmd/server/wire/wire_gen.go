// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/google/wire"
	"github.com/spf13/viper"
	"go-gin-demo/internal/common/repository"
	"go-gin-demo/internal/knowledgebase"
	handler2 "go-gin-demo/internal/knowledgebase/handler"
	"go-gin-demo/internal/routers"
	"go-gin-demo/internal/server"
	"go-gin-demo/internal/system"
	"go-gin-demo/internal/system/handler"
	repository2 "go-gin-demo/internal/system/repository"
	"go-gin-demo/internal/system/service"
	"go-gin-demo/pkg/jwt"
	"go-gin-demo/pkg/log"
	"net/http"
)

// Injectors from wire.go:

func NewServer(viperViper *viper.Viper, logger *log.Logger) http.Handler {
	jwtJWT := jwt.NewJwt(viperViper)
	engine := server.NewServer()
	db := repository.NewDB(viperViper)
	repositoryRepository := repository.NewRepository(db, logger)
	userRepository := repository2.NewUserRepository(repositoryRepository)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(jwtJWT, userService)
	systemSystem := system.NewSystem(userHandler)
	clientConn := knowledgebase.NewQdrant(viperViper, logger)
	collectionsClient := knowledgebase.NewCollectionsClient(clientConn)
	collectionHandler := handler2.NewCollectionHandler(collectionsClient)
	knowledgebaseKnowledgebase := knowledgebase.NewKnowledgebase(collectionHandler)
	httpHandler := routers.NewRouter(jwtJWT, engine, systemSystem, knowledgebaseKnowledgebase)
	return httpHandler
}

// wire.go:

var ServerSet = wire.NewSet(server.NewServer)

var JwtSet = wire.NewSet(jwt.NewJwt)

var CommSet = wire.NewSet(repository.NewDB, repository.NewRepository)

var RouterSet = wire.NewSet(routers.NewRouter)

var SystemSet = wire.NewSet(system.NewUserHandler, system.NewUserService, system.NewUserRepository, system.NewSystem)

var KnowledgebaseSet = wire.NewSet(knowledgebase.NewQdrant, knowledgebase.NewQdrantClient, knowledgebase.NewCollectionsClient, knowledgebase.NewPointsClient, knowledgebase.NewSnapshotsClient, knowledgebase.NewCollectionHandler, knowledgebase.NewKnowledgebase)

// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/google/wire"
	"github.com/spf13/viper"
	"go-gin-demo/internal/common"
	"go-gin-demo/internal/routers"
	"go-gin-demo/internal/server"
	"go-gin-demo/internal/system/handler"
	"go-gin-demo/internal/system/repository"
	"go-gin-demo/internal/system/service"
	"go-gin-demo/pkg/log"
	"net/http"
)

// Injectors from wire.go:

func NewServer(viperViper *viper.Viper, logger *log.Logger) http.Handler {
	engine := server.NewServer()
	commonHandler := common.NewHandler(logger)
	db := common.NewDB(viperViper)
	commonRepository := common.NewRepository(db, logger)
	userRepository := repository.NewUserRepository(commonRepository)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(commonHandler, userService)
	systemHandler := handler.NewSystemHandler(userHandler)
	httpHandler := routers.NewRouter(engine, systemHandler)
	return httpHandler
}

// wire.go:

var ServerSet = wire.NewSet(server.NewServer)

var CommSet = wire.NewSet(common.NewHandler, common.NewDB, common.NewRepository)

var SystemSet = wire.NewSet(repository.NewUserRepository, service.NewUserService, handler.NewUserHandler, handler.NewSystemHandler)

var RouterSet = wire.NewSet(routers.NewRouter)
